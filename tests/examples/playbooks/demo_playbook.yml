---
# Demo playbook for Ansible Scenario Testing
# This playbook:
# 1. Pings a server
# 2. Retrieves data from a public API
# 3. Sends emails
# 4. Uses a mocked custom module

- name: Demo Playbook with Various Tasks
  hosts: webservers
  gather_facts: yes
  vars:
    api_url: "https://jsonplaceholder.typicode.com/posts/1"
    smtp_server: "localhost"
    smtp_port: 1025
    email_recipients:
      - "admin@example.com"
      - "manager@example.com"
    project_id: "PROJ-12345"

  tasks:
    - name: Ping server to check connectivity
      ping:
      register: ping_result

    - name: Show ping result
      debug:
        var: ping_result
        
    - name: Retrieve data from public API
      uri:
        url: "{{ api_url }}"
        method: GET
        return_content: yes
      register: api_response
      
    - name: Process API results
      debug:
        msg: "Retrieved post with title: {{ api_response.json.title }}"
      when: api_response.status == 200
        
    - name: Send email notification
      mail:
        host: "{{ smtp_server }}"
        port: "{{ smtp_port }}"
        to: "{{ email_recipients }}"
        subject: "Project Status Update: {{ project_id }}"
        body: |
          This is an automated notification about project {{ project_id }}.
          
          API Response:
          Title: {{ api_response.json.title | default('N/A') }}
          Body: {{ api_response.json.body | default('N/A') }}
          
          System Information:
          Hostname: {{ ansible_hostname }}
          Date: {{ ansible_date_time.date }}
      when: ping_result is success and api_response.status == 200
        
    - name: Process project with custom module
      custom_processor:
        project_id: "{{ project_id }}"
        action: "notify"
        metadata:
          source: "automated_job"
          timestamp: "{{ ansible_date_time.iso8601 }}"
      register: process_result
      
    - name: Show processing result
      debug:
        var: process_result
